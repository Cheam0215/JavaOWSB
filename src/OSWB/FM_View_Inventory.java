/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package OSWB;

import Entities.FinanceManager;
import Entities.FinanceManager.InventoryItem;
import Interface.InventoryVerificationServices;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Maxcm
 */
public class FM_View_Inventory extends javax.swing.JFrame {
    private DefaultTableModel model;
    private FinanceManager financeManager;
    
    private final String[] columnNames = {
        "Item Code", "Item Name", "Stock Level", "Supplier Code", "Unit Price", "Retail Price"
    };
    private final InventoryVerificationServices IVService;
    private final FM_Dashboard previousScreen;

    public FM_View_Inventory(FinanceManager financeManager, InventoryVerificationServices IVService, FM_Dashboard previousScreen) {
        this.financeManager = financeManager;
        this.IVService = IVService;
        this.previousScreen = previousScreen;
        initComponents();
        setupTable();
        viewTable();
        
    }
    
    
    private void setupTable() {
        model = new DefaultTableModel(columnNames, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        InventoryTable.setModel(model);
    }
    
    
    private void viewTable(){
     model.setRowCount(0);
        
        List<InventoryItem> inventoryItems = IVService.verifyInventoryUpdate();
        
        int rowCount = 0;
        for (InventoryItem item : inventoryItems) {
            model.addRow(new Object[] {
                item.getItemCode(),
                item.getItemName(),
                item.getStockLevel(),
                item.getSupplierCode(),
                item.getUnitPrice(),
                item.getRetailPrice()
            });
            rowCount++;
        }
        System.out.println("Rows added to inventory table: " + rowCount);
        model.fireTableDataChanged();
        InventoryTable.repaint();   
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        jMenu1 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        InventoryTable = new javax.swing.JTable();
        SearchBtn = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        BackBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Inventory");

        InventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Item Code", "Item Name", "Stock Level", "Supplier Code", "Unit Price", "Retail Price"
            }
        ));
        jScrollPane1.setViewportView(InventoryTable);

        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(BackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(569, 569, 569)
                                .addComponent(jLabel1)))
                        .addGap(0, 569, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBtn))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(BackBtn)
                .addGap(27, 27, 27))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        String searchText = txtSearch.getText().trim();
        
        List<InventoryItem> inventoryItems = IVService.verifyInventoryUpdate();
        
        model.setRowCount(0);
        
        if (searchText.isEmpty()) {
            viewTable();
            return;
        }
        
        List<InventoryItem> matches = new ArrayList<>();
        for (InventoryItem item : inventoryItems) {
            if (item.getItemCode().equalsIgnoreCase(searchText) || 
                item.getItemName().equalsIgnoreCase(searchText)) {
                matches.add(item);
            }
        }
        
        if (matches.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Item Not Found", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Populate table with matches
        int rowCount = 0;
        for (InventoryItem item : matches) {
            model.addRow(new Object[] {
                item.getItemCode(),
                item.getItemName(),
                item.getStockLevel(),
                item.getSupplierCode(),
                item.getUnitPrice(),
                item.getRetailPrice()
            });
            rowCount++;
        }
        System.out.println("Search results - Rows added: " + rowCount);
        model.fireTableDataChanged();
        InventoryTable.repaint();                    
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        SearchBtnActionPerformed(evt);
    }//GEN-LAST:event_txtSearchActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
         if (this.previousScreen != null) {
            this.previousScreen.setVisible(true); // Just make the existing one visible
        } else {
            // Fallback or error: Should not happen if previousScreen is always passed
            JOptionPane.showMessageDialog(this, "Error: Previous screen reference lost.", "Navigation Error", JOptionPane.ERROR_MESSAGE);
            // Optionally, recreate Login if truly lost
            // new Login().setVisible(true);
        }
        this.dispose();
    }//GEN-LAST:event_BackBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
     
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JTable InventoryTable;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
