/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package OSWB;

import java.util.List;
import javax.swing.table.DefaultTableModel;

import Entities.PurchaseRequisition;
import Entities.FinanceManager;
import Interface.PurchaseRequisitionViewServices;
import javax.swing.JOptionPane;

/**
 *
 * @author Maxcm
 */
public class FM_View_Purchase_Requisition extends javax.swing.JFrame {
    private final FinanceManager financeManager;
    private DefaultTableModel tableModel;
    private final PurchaseRequisitionViewServices purchaseRequisitionViewer;
    private final FM_Dashboard previousScreen;

    /**
     * Creates new form FM_View_Purchase_Requisition
     * @param financeManager
     * @param purchaseRequisitionViewer
     * @param previousScreen
     */
    public FM_View_Purchase_Requisition(FinanceManager financeManager, PurchaseRequisitionViewServices purchaseRequisitionViewer, FM_Dashboard previousScreen) {
        this.financeManager = financeManager;
        this.purchaseRequisitionViewer = purchaseRequisitionViewer;
        this.previousScreen = previousScreen;
        tableModel = new DefaultTableModel(
            new Object[][] {},
            new String[] {
                "PR ID", "Requested By", "Item Code", "Quantity", 
                "Required Date", "Requested Date", "Status"
            }
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        initComponents();
        prTable.setModel(tableModel);
        populateTable();
        
    }
    
    private void populateTable() {
        List<PurchaseRequisition> prList = purchaseRequisitionViewer.getAllPRs();
        System.out.println("PRs received: " + prList.size());

        tableModel.setRowCount(0);

        int rowCount = 0;
        for (PurchaseRequisition pr : prList) {
            if (pr != null) {
                tableModel.addRow(new Object[]{
                    pr.getPrId(),
                    pr.getRequestedBy(),
                    pr.getItemCode(),
                    pr.getQuantity(),
                    pr.getRequiredDate(),
                    pr.getRequestedDate(),
                    pr.getStatus()
                });
                rowCount++;
            }
        }
        System.out.println("Rows added to table: " + rowCount);
        tableModel.fireTableDataChanged();
        prTable.repaint();  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        prTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        prTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "PR ID", "Requested By", "Item Code", "Supplier Code", "Quantity", "Required Date", "Requested Date"
            }
        ));
        jScrollPane1.setViewportView(prTable);

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 36)); // NOI18N
        jLabel1.setText("Purchase Requisition List");

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(backButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1268, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(backButton)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed

    }//GEN-LAST:event_BackBtnActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
         if (this.previousScreen != null) {
            this.previousScreen.setVisible(true); // Just make the existing one visible
        } else {
            // Fallback or error: Should not happen if previousScreen is always passed
            JOptionPane.showMessageDialog(this, "Error: Previous screen reference lost.", "Navigation Error", JOptionPane.ERROR_MESSAGE);
            // Optionally, recreate Login if truly lost
            // new Login().setVisible(true);
        }
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable prTable;
    // End of variables declaration//GEN-END:variables
}
